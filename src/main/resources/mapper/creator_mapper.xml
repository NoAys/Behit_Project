<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<!-- code : 3 = gender, 4 : country -->
<mapper namespace="com.behit.creator.dao.CreatorDAO">
	<select id="getGenders" resultType="commcre">
		SELECT (common_code_idx) AS code_idx, 
			(common_code_kind) AS code_kind,
			(common_code_name) AS code_name
		FROM commons_code WHERE common_code_kind = 3
	</select>
	<select id="getCountries" resultType="commcre">
		SELECT (common_code_idx) AS code_idx, 
			(common_code_kind) AS code_kind,
			(common_code_name) AS code_name
		FROM commons_code WHERE common_code_kind = 4 
		ORDER BY common_code_name ASC
	</select>
	<select id="getChCategory" resultType="String">
		SELECT (common_code_name) AS code_name
		FROM commons_code WHERE common_code_kind = 5
	</select>
	
	<!-- 크리에이터 등록 -->
	
	<!-- insert Creator -->
	<insert useGeneratedKeys="true" keyProperty="cre_idx"
		id="creatorInsert" parameterType="creator">
		INSERT INTO creator (
			emp_id,cre_name,cre_nick_name,cre_gender
			,cre_email,cre_phone,cre_birthday,cre_country
			,cre_address,cre_address_detail, cre_contract_start
			,cre_contract_end, cre_specifics,emp_id_in,emp_id_up
		) 
		VALUES (
			#{mng_id}, #{cre_name},#{cre_nick_name}, #{cre_gender}
			,#{cre_email},#{cre_phone},#{cre_birthday}, #{cre_country},
			#{cre_address},#{cre_address_detail},#{cre_contract_start}
			,#{cre_contract_end},#{cre_specifics},#{emp_id_in},#{emp_id_up}
		)
	</insert>
	<!-- insert Channel  -->
	<insert id="channelInsert" parameterType="channel">
		INSERT INTO channel (
			channel_id, cre_idx, channel_name, channel_url, rep_channel
			,channel_date, channel_cate, rep_video, emp_id,emp_id_up
		)
		VALUES (
			#{channel_id},#{cre_idx},#{channel_name},#{channel_url},#{rep_channel}
			,#{channel_date},#{channel_cate}, #{rep_video},#{emp_id},#{emp_id_up}
		)
	</insert>
	<insert id="snsInsert" parameterType="sns">
		INSERT INTO creatorsns	(
			cre_idx, sns_url, sns_cate, emp_id, emp_id_up
		)
		VALUES (
			#{cre_idx},#{sns_url},#{sns_cate},#{emp_id},#{emp_id_up}
		);
	</insert>
	<insert id="creHisInsert" parameterType="creHistory">
		INSERT INTO creatorhistory (
			cre_idx, cre_his_title, cre_his_cate, cre_his_content, history_date
			,emp_id, emp_id_up
		)
		VALUES (
			#{cre_idx}, #{cre_his_title}, #{cre_his_cate}, #{cre_his_content}
			, #{history_date}, #{emp_id}, #{emp_id_up}
		)
	</insert>
	
	<!-- 크리에이터 리스트 불러오기 -->
	<!-- 토탈 정보 불러오기 -->
	<select id="getTotalInfo" resultType="HashMap"> 
		SELECT 
		    (SELECT COUNT(*) FROM creator) as total_creators,
		    (SELECT COUNT(*) FROM channel) as total_channels,
		    SUM(latest_subscriber) as total_subscribers,
		    SUM(latest_contents) as total_contents
		FROM (
		    SELECT 
		        channel_id, 
		        MAX(subscriber) as latest_subscriber, 
		        MAX(contents) as latest_contents
		    FROM channeldata
		    GROUP BY channel_id
		) as latest_channel_data;
	</select>
	<!-- 크리에이터 전체 리스트 -->
	<select id="getAllList" resultType="HashMap">
		SELECT c.cre_idx, c.cre_nick_name ,(e.emp_name)AS mng_name, 
				ch.channel_url ,ch.channel_name, ch.channel_cate,
				f.new_file_name ,f.ori_file_name
		FROM creator c 
			JOIN channel ch ON c.cre_idx = ch.cre_idx AND ch.rep_channel =1
			JOIN employee e ON c.emp_id = e.emp_id 
			JOIN file f ON c.cre_idx = f.file_kind_idx 
		WHERE f.file_kind = 6
	</select>
	
	<!-- 나의 크리에이터 리스트 -->
	<select id="getMyList" parameterType="String" resultType="HashMap">
		SELECT 
		    c.cre_idx, c.cre_nick_name, ch.cre_idx, ch.channel_name, ch.channel_url, ch.channel_cate,
		    tc.last_subscriber, tc.last_views, tc.last_contents,
		    f.new_file_name , f.ori_file_name 
		FROM 
		    creator c 
			JOIN channel ch ON c.cre_idx = ch.cre_idx
			JOIN (
		        SELECT 
		            c2.cre_idx, ch2.channel_id,
		            MAX(cd2.subscriber) as last_subscriber, 
		            MAX(cd2.contents) as last_contents,
		            MAX(cd2.views) as last_views
		        FROM 
		            channeldata cd2 
		        JOIN 
		            channel ch2 ON cd2.channel_id = ch2.channel_id  AND cd2.channel_rep = 1
		        JOIN 
		            creator c2 ON c2.cre_idx = ch2.cre_idx 
		        GROUP BY 
		            ch2.channel_id
		    ) AS tc ON ch.cre_idx = tc.cre_idx
		   JOIN file f ON tc.cre_idx = f.file_kind_idx 
		WHERE 
		    ch.rep_channel=1 AND c.emp_id = #{loginId} AND f.file_kind =6
		ORDER BY tc.last_subscriber DESC
	</select>
	
	<!-- 크리에이터 상세  -->
		<!-- 크리에이터 정보 -->
	<select id="getCreator" parameterType="int" resultType="HashMap">
		SELECT c.cre_idx , c.emp_id , c.cre_name , c.cre_nick_name ,c.cre_gender , c.cre_phone ,
			c.cre_birthday ,c.cre_country ,c.cre_address ,c.cre_address_detail ,c.cre_contract_start ,
			c.cre_contract_end ,c.cre_specifics ,f.new_file_name ,f.ori_file_name FROM creator c 
			JOIN file f ON c.cre_idx = f.file_kind_idx
		WHERE cre_idx = #{cre_idx} AND f.file_kind =6;
	</select>
	<select id="getChannel" parameterType="int" resultType="HashMap">
		SELECT * FROM channel WHERE cre_idx = #{cre_idx}
		ORDER BY rep_channel DESC
	</select>
	<select id="getChannelIdByCreIdx" parameterType="int" resultType="String">
		SELECT channel_id FROM channel WHERE cre_idx = #{cre_idx}
	</select>
	<select id="getCreHistory" parameterType="int" resultType="HashMap">
		SELECT * FROM creatorhistory 
		WHERE cre_idx =#{cre_idx} 
		ORDER BY history_date DESC;
	</select>
	<select id="getSns" parameterType="int" resultType="sns">
		SELECT * FROM creatorsns WHERE cre_idx =#{cre_idx};
	</select>
	
	
	<!--  크리에이터 차트 데이터 -->
	<select id="getChartData" parameterType="String" resultType="channeldata">
		SELECT * FROM channeldata cd 
		WHERE cd.channel_id = #{repChannelId}
		AND cd.channel_data_date >= CURDATE() - INTERVAL 30 DAY
		ORDER BY cd.channel_data_date ASC
	</select>
</mapper>